"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class lcmt_whole_body_data(object):
    __slots__ = ["timestamp", "num_positions", "q_des", "num_constrained_dofs", "constrained_dofs"]

    def __init__(self):
        self.timestamp = 0
        self.num_positions = 0
        self.q_des = []
        self.num_constrained_dofs = 0
        self.constrained_dofs = []

    def encode(self):
        buf = BytesIO()
        buf.write(lcmt_whole_body_data._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qi", self.timestamp, self.num_positions))
        buf.write(struct.pack('>%dd' % self.num_positions, *self.q_des[:self.num_positions]))
        buf.write(struct.pack(">i", self.num_constrained_dofs))
        buf.write(struct.pack('>%di' % self.num_constrained_dofs, *self.constrained_dofs[:self.num_constrained_dofs]))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != lcmt_whole_body_data._get_packed_fingerprint():
            raise ValueError("Decode error")
        return lcmt_whole_body_data._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = lcmt_whole_body_data()
        self.timestamp, self.num_positions = struct.unpack(">qi", buf.read(12))
        self.q_des = struct.unpack('>%dd' % self.num_positions, buf.read(self.num_positions * 8))
        self.num_constrained_dofs = struct.unpack(">i", buf.read(4))[0]
        self.constrained_dofs = struct.unpack('>%di' % self.num_constrained_dofs, buf.read(self.num_constrained_dofs * 4))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if lcmt_whole_body_data in parents: return 0
        tmphash = (0xec1b6910198d358) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if lcmt_whole_body_data._packed_fingerprint is None:
            lcmt_whole_body_data._packed_fingerprint = struct.pack(">Q", lcmt_whole_body_data._get_hash_recursive([]))
        return lcmt_whole_body_data._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

