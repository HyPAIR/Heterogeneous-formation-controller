"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class robot_urdf_t(object):
    __slots__ = ["utime", "robot_name", "urdf_xml_string", "left_hand", "right_hand"]

    LEFT_NONE = 0
    RIGHT_NONE = 1
    LEFT_SANDIA = 2
    RIGHT_SANDIA = 3
    LEFT_IROBOT = 4
    RIGHT_IROBOT = 5
    LEFT_ROBOTIQ = 6
    RIGHT_ROBOTIQ = 7
    LEFT_UNKNOWN = 8
    RIGHT_UNKNOWN = 9

    def __init__(self):
        self.utime = 0
        self.robot_name = ""
        self.urdf_xml_string = ""
        self.left_hand = 0
        self.right_hand = 0

    def encode(self):
        buf = BytesIO()
        buf.write(robot_urdf_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">q", self.utime))
        __robot_name_encoded = self.robot_name.encode('utf-8')
        buf.write(struct.pack('>I', len(__robot_name_encoded)+1))
        buf.write(__robot_name_encoded)
        buf.write(b"\0")
        __urdf_xml_string_encoded = self.urdf_xml_string.encode('utf-8')
        buf.write(struct.pack('>I', len(__urdf_xml_string_encoded)+1))
        buf.write(__urdf_xml_string_encoded)
        buf.write(b"\0")
        buf.write(struct.pack(">bb", self.left_hand, self.right_hand))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != robot_urdf_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return robot_urdf_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = robot_urdf_t()
        self.utime = struct.unpack(">q", buf.read(8))[0]
        __robot_name_len = struct.unpack('>I', buf.read(4))[0]
        self.robot_name = buf.read(__robot_name_len)[:-1].decode('utf-8', 'replace')
        __urdf_xml_string_len = struct.unpack('>I', buf.read(4))[0]
        self.urdf_xml_string = buf.read(__urdf_xml_string_len)[:-1].decode('utf-8', 'replace')
        self.left_hand, self.right_hand = struct.unpack(">bb", buf.read(2))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if robot_urdf_t in parents: return 0
        tmphash = (0x183a210f928d42b) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if robot_urdf_t._packed_fingerprint is None:
            robot_urdf_t._packed_fingerprint = struct.pack(">Q", robot_urdf_t._get_hash_recursive([]))
        return robot_urdf_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

