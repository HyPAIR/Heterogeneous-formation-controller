from bisect import bisect_left
import mosek
class SolverInfo:
  dinfnames  = [ "biCleanDualTime","biCleanPrimalDualTime","biCleanPrimalTime","biCleanTime","biDualTime","biPrimalTime","biTime","concurrentTime","intpntDualFeas","intpntDualObj","intpntFactorNumFlops","intpntOptStatus","intpntOrderTime","intpntPrimalFeas","intpntPrimalObj","intpntTime","mioCgSeperationTime","mioCmirSeperationTime","mioConstructSolutionObj","mioDualBoundAfterPresolve","mioHeuristicTime","mioObjAbsGap","mioObjBound","mioObjInt","mioObjRelGap","mioOptimizerTime","mioProbingTime","mioRootCutgenTime","mioRootOptimizerTime","mioRootPresolveTime","mioTime","mioUserObjCut","optimizerTime","presolveEliTime","presolveLindepTime","presolveTime","primalRepairPenaltyObj","qcqoReformulateTime","rdTime","simDualTime","simFeas","simNetworkDualTime","simNetworkPrimalTime","simNetworkTime","simObj","simPrimalDualTime","simPrimalTime","simTime","solBasDualObj","solBasDviolcon","solBasDviolvar","solBasPrimalObj","solBasPviolcon","solBasPviolvar","solItgPrimalObj","solItgPviolbarvar","solItgPviolcon","solItgPviolcones","solItgPviolitg","solItgPviolvar","solItrDualObj","solItrDviolbarvar","solItrDviolcon","solItrDviolcones","solItrDviolvar","solItrPrimalObj","solItrPviolbarvar","solItrPviolcon","solItrPviolcones","solItrPviolvar" ];
  iinfnames  = [ "anaProNumCon","anaProNumConEq","anaProNumConFr","anaProNumConLo","anaProNumConRa","anaProNumConUp","anaProNumVar","anaProNumVarBin","anaProNumVarCont","anaProNumVarEq","anaProNumVarFr","anaProNumVarInt","anaProNumVarLo","anaProNumVarRa","anaProNumVarUp","concurrentFastestOptimizer","intpntFactorDimDense","intpntIter","intpntNumThreads","intpntSolveDual","mioConstructNumRoundings","mioConstructSolution","mioInitialSolution","mioNumActiveNodes","mioNumBasisCuts","mioNumBranch","mioNumCardgubCuts","mioNumCliqueCuts","mioNumCoefRedcCuts","mioNumContraCuts","mioNumDisaggCuts","mioNumFlowCoverCuts","mioNumGcdCuts","mioNumGomoryCuts","mioNumGubCoverCuts","mioNumIntSolutions","mioNumKnapsurCoverCuts","mioNumLatticeCuts","mioNumLiftCuts","mioNumObjCuts","mioNumPlanLocCuts","mioNumRelax","mioNumcon","mioNumint","mioNumvar","mioObjBoundDefined","mioTotalNumCuts","mioUserObjCut","optNumcon","optNumvar","optimizeResponse","rdNumbarvar","rdNumcon","rdNumcone","rdNumintvar","rdNumq","rdNumvar","rdProtype","simDualDegIter","simDualHotstart","simDualHotstartLu","simDualInfIter","simDualIter","simNetworkDualDegIter","simNetworkDualHotstart","simNetworkDualHotstartLu","simNetworkDualInfIter","simNetworkDualIter","simNetworkPrimalDegIter","simNetworkPrimalHotstart","simNetworkPrimalHotstartLu","simNetworkPrimalInfIter","simNetworkPrimalIter","simNumcon","simNumvar","simPrimalDegIter","simPrimalDualDegIter","simPrimalDualHotstart","simPrimalDualHotstartLu","simPrimalDualInfIter","simPrimalDualIter","simPrimalHotstart","simPrimalHotstartLu","simPrimalInfIter","simPrimalIter","simSolveDual","solBasProsta","solBasSolsta","solIntProsta","solIntSolsta","solItgProsta","solItgSolsta","solItrProsta","solItrSolsta","stoNumACacheFlushes","stoNumARealloc","stoNumATransposes" ];
  liinfnames = [ "biCleanDualDegIter","biCleanDualIter","biCleanPrimalDegIter","biCleanPrimalDualDegIter","biCleanPrimalDualIter","biCleanPrimalDualSubIter","biCleanPrimalIter","biDualIter","biPrimalIter","intpntFactorNumNz","mioIntpntIter","mioSimplexIter","rdNumanz","rdNumqnz" ];
  dinfsyms   = [ mosek.dinfitem.bi_clean_dual_time,mosek.dinfitem.bi_clean_primal_dual_time,mosek.dinfitem.bi_clean_primal_time,mosek.dinfitem.bi_clean_time,mosek.dinfitem.bi_dual_time,mosek.dinfitem.bi_primal_time,mosek.dinfitem.bi_time,mosek.dinfitem.concurrent_time,mosek.dinfitem.intpnt_dual_feas,mosek.dinfitem.intpnt_dual_obj,mosek.dinfitem.intpnt_factor_num_flops,mosek.dinfitem.intpnt_opt_status,mosek.dinfitem.intpnt_order_time,mosek.dinfitem.intpnt_primal_feas,mosek.dinfitem.intpnt_primal_obj,mosek.dinfitem.intpnt_time,mosek.dinfitem.mio_cg_seperation_time,mosek.dinfitem.mio_cmir_seperation_time,mosek.dinfitem.mio_construct_solution_obj,mosek.dinfitem.mio_dual_bound_after_presolve,mosek.dinfitem.mio_heuristic_time,mosek.dinfitem.mio_obj_abs_gap,mosek.dinfitem.mio_obj_bound,mosek.dinfitem.mio_obj_int,mosek.dinfitem.mio_obj_rel_gap,mosek.dinfitem.mio_optimizer_time,mosek.dinfitem.mio_probing_time,mosek.dinfitem.mio_root_cutgen_time,mosek.dinfitem.mio_root_optimizer_time,mosek.dinfitem.mio_root_presolve_time,mosek.dinfitem.mio_time,mosek.dinfitem.mio_user_obj_cut,mosek.dinfitem.optimizer_time,mosek.dinfitem.presolve_eli_time,mosek.dinfitem.presolve_lindep_time,mosek.dinfitem.presolve_time,mosek.dinfitem.primal_repair_penalty_obj,mosek.dinfitem.qcqo_reformulate_time,mosek.dinfitem.rd_time,mosek.dinfitem.sim_dual_time,mosek.dinfitem.sim_feas,mosek.dinfitem.sim_network_dual_time,mosek.dinfitem.sim_network_primal_time,mosek.dinfitem.sim_network_time,mosek.dinfitem.sim_obj,mosek.dinfitem.sim_primal_dual_time,mosek.dinfitem.sim_primal_time,mosek.dinfitem.sim_time,mosek.dinfitem.sol_bas_dual_obj,mosek.dinfitem.sol_bas_dviolcon,mosek.dinfitem.sol_bas_dviolvar,mosek.dinfitem.sol_bas_primal_obj,mosek.dinfitem.sol_bas_pviolcon,mosek.dinfitem.sol_bas_pviolvar,mosek.dinfitem.sol_itg_primal_obj,mosek.dinfitem.sol_itg_pviolbarvar,mosek.dinfitem.sol_itg_pviolcon,mosek.dinfitem.sol_itg_pviolcones,mosek.dinfitem.sol_itg_pviolitg,mosek.dinfitem.sol_itg_pviolvar,mosek.dinfitem.sol_itr_dual_obj,mosek.dinfitem.sol_itr_dviolbarvar,mosek.dinfitem.sol_itr_dviolcon,mosek.dinfitem.sol_itr_dviolcones,mosek.dinfitem.sol_itr_dviolvar,mosek.dinfitem.sol_itr_primal_obj,mosek.dinfitem.sol_itr_pviolbarvar,mosek.dinfitem.sol_itr_pviolcon,mosek.dinfitem.sol_itr_pviolcones,mosek.dinfitem.sol_itr_pviolvar ];
  iinfsyms   = [ mosek.iinfitem.ana_pro_num_con,mosek.iinfitem.ana_pro_num_con_eq,mosek.iinfitem.ana_pro_num_con_fr,mosek.iinfitem.ana_pro_num_con_lo,mosek.iinfitem.ana_pro_num_con_ra,mosek.iinfitem.ana_pro_num_con_up,mosek.iinfitem.ana_pro_num_var,mosek.iinfitem.ana_pro_num_var_bin,mosek.iinfitem.ana_pro_num_var_cont,mosek.iinfitem.ana_pro_num_var_eq,mosek.iinfitem.ana_pro_num_var_fr,mosek.iinfitem.ana_pro_num_var_int,mosek.iinfitem.ana_pro_num_var_lo,mosek.iinfitem.ana_pro_num_var_ra,mosek.iinfitem.ana_pro_num_var_up,mosek.iinfitem.concurrent_fastest_optimizer,mosek.iinfitem.intpnt_factor_dim_dense,mosek.iinfitem.intpnt_iter,mosek.iinfitem.intpnt_num_threads,mosek.iinfitem.intpnt_solve_dual,mosek.iinfitem.mio_construct_num_roundings,mosek.iinfitem.mio_construct_solution,mosek.iinfitem.mio_initial_solution,mosek.iinfitem.mio_num_active_nodes,mosek.iinfitem.mio_num_basis_cuts,mosek.iinfitem.mio_num_branch,mosek.iinfitem.mio_num_cardgub_cuts,mosek.iinfitem.mio_num_clique_cuts,mosek.iinfitem.mio_num_coef_redc_cuts,mosek.iinfitem.mio_num_contra_cuts,mosek.iinfitem.mio_num_disagg_cuts,mosek.iinfitem.mio_num_flow_cover_cuts,mosek.iinfitem.mio_num_gcd_cuts,mosek.iinfitem.mio_num_gomory_cuts,mosek.iinfitem.mio_num_gub_cover_cuts,mosek.iinfitem.mio_num_int_solutions,mosek.iinfitem.mio_num_knapsur_cover_cuts,mosek.iinfitem.mio_num_lattice_cuts,mosek.iinfitem.mio_num_lift_cuts,mosek.iinfitem.mio_num_obj_cuts,mosek.iinfitem.mio_num_plan_loc_cuts,mosek.iinfitem.mio_num_relax,mosek.iinfitem.mio_numcon,mosek.iinfitem.mio_numint,mosek.iinfitem.mio_numvar,mosek.iinfitem.mio_obj_bound_defined,mosek.iinfitem.mio_total_num_cuts,mosek.iinfitem.mio_user_obj_cut,mosek.iinfitem.opt_numcon,mosek.iinfitem.opt_numvar,mosek.iinfitem.optimize_response,mosek.iinfitem.rd_numbarvar,mosek.iinfitem.rd_numcon,mosek.iinfitem.rd_numcone,mosek.iinfitem.rd_numintvar,mosek.iinfitem.rd_numq,mosek.iinfitem.rd_numvar,mosek.iinfitem.rd_protype,mosek.iinfitem.sim_dual_deg_iter,mosek.iinfitem.sim_dual_hotstart,mosek.iinfitem.sim_dual_hotstart_lu,mosek.iinfitem.sim_dual_inf_iter,mosek.iinfitem.sim_dual_iter,mosek.iinfitem.sim_network_dual_deg_iter,mosek.iinfitem.sim_network_dual_hotstart,mosek.iinfitem.sim_network_dual_hotstart_lu,mosek.iinfitem.sim_network_dual_inf_iter,mosek.iinfitem.sim_network_dual_iter,mosek.iinfitem.sim_network_primal_deg_iter,mosek.iinfitem.sim_network_primal_hotstart,mosek.iinfitem.sim_network_primal_hotstart_lu,mosek.iinfitem.sim_network_primal_inf_iter,mosek.iinfitem.sim_network_primal_iter,mosek.iinfitem.sim_numcon,mosek.iinfitem.sim_numvar,mosek.iinfitem.sim_primal_deg_iter,mosek.iinfitem.sim_primal_dual_deg_iter,mosek.iinfitem.sim_primal_dual_hotstart,mosek.iinfitem.sim_primal_dual_hotstart_lu,mosek.iinfitem.sim_primal_dual_inf_iter,mosek.iinfitem.sim_primal_dual_iter,mosek.iinfitem.sim_primal_hotstart,mosek.iinfitem.sim_primal_hotstart_lu,mosek.iinfitem.sim_primal_inf_iter,mosek.iinfitem.sim_primal_iter,mosek.iinfitem.sim_solve_dual,mosek.iinfitem.sol_bas_prosta,mosek.iinfitem.sol_bas_solsta,mosek.iinfitem.sol_int_prosta,mosek.iinfitem.sol_int_solsta,mosek.iinfitem.sol_itg_prosta,mosek.iinfitem.sol_itg_solsta,mosek.iinfitem.sol_itr_prosta,mosek.iinfitem.sol_itr_solsta,mosek.iinfitem.sto_num_a_cache_flushes,mosek.iinfitem.sto_num_a_realloc,mosek.iinfitem.sto_num_a_transposes ];
  liinfsyms  = [ mosek.liinfitem.bi_clean_dual_deg_iter,mosek.liinfitem.bi_clean_dual_iter,mosek.liinfitem.bi_clean_primal_deg_iter,mosek.liinfitem.bi_clean_primal_dual_deg_iter,mosek.liinfitem.bi_clean_primal_dual_iter,mosek.liinfitem.bi_clean_primal_dual_sub_iter,mosek.liinfitem.bi_clean_primal_iter,mosek.liinfitem.bi_dual_iter,mosek.liinfitem.bi_primal_iter,mosek.liinfitem.intpnt_factor_num_nz,mosek.liinfitem.mio_intpnt_iter,mosek.liinfitem.mio_simplex_iter,mosek.liinfitem.rd_numanz,mosek.liinfitem.rd_numqnz ];
  @staticmethod
  def _getdouinf(infname):
    idx = bisect_left(SolverInfo.dinfnames, infname)
    if idx != len(SolverInfo.dinfnames) and SolverInfo.dinfnames[idx] == infname:
      return SolverInfo.dinfsyms[idx]
    else:
      return None
  @staticmethod
  def _getintinf(infname):
    idx = bisect_left(SolverInfo.iinfnames, infname)
    if idx != len(SolverInfo.iinfnames) and SolverInfo.iinfnames[idx] == infname:
      return SolverInfo.iinfsyms[idx]
    else:
      return None
  @staticmethod
  def _getlintinf(infname):
    idx = bisect_left(SolverInfo.liinfnames, infname)
    if idx != len(SolverInfo.liinfnames) and SolverInfo.liinfnames[idx] == infname:
      return SolverInfo.liinfsyms[idx]
    else:
      return None
